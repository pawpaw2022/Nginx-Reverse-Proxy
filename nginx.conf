user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
}

http {

    ## Basic Settings for vue app ##
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;


    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name t1.4399lsn.cfd;

        # root /usr/share/nginx/html;

        ssl_certificate       /etc/letsencrypt/live/t1.4399lsn.cfd/fullchain.pem;
        ssl_certificate_key   /etc/letsencrypt/live/t1.4399lsn.cfd/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;
        ssl_session_tickets off;
        ssl_protocols         TLSv1.2 TLSv1.3;
        ssl_ciphers           ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;


        ## https://YOUR_DOMAIN  --> bing.com ##
        ## 反向代理 ##
        location / {
            # 如果目标地址出现防盗链（CORS），则无法获取图片
            proxy_pass https://www.bing.com; # 代理地址
            proxy_ssl_server_name on;
            proxy_redirect off;
            sub_filter_once off;
            sub_filter www.bing.com $server_name;
            proxy_set_header Host www.bing.com;
            proxy_set_header Referer $http_referer;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Accept-Encoding "";
            proxy_set_header Accept-Language "zh-CN";
        }



        ## https://YOUR_DOMAIN/vue/  --> VUE app ##
        location /vue {
            index index.html;
            alias /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

        ## https://YOUR_DOMAIN/web/  --> Static HTML ##
        location /web {
            index index.html;
            alias /usr/share/nginx/web;
            try_files $uri $uri/ /index.html;
        }

        



    }

    server {
        listen 80;
        server_name t1.4399lsn.cfd;
        rewrite ^(.*)$ https://${server_name}$1 permanent;
    }
}
